Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ASIGNWORD
    BEGIN
    DIVIDE
    DO
    END
    FORASIGNWORD
    GAME
    LBRACE
    MAIN
    MINUS
    MULTI
    OBJECT
    PLUS
    RBRACE
    SPIDERWEB

Grammar

Rule 0     S' -> statements
Rule 1     statements -> var_assign statements
Rule 2     statements -> var_define statements
Rule 3     statements -> For statements
Rule 4     statements -> Dow statements
Rule 5     statements -> Random statements
Rule 6     statements -> empty
Rule 7     Random -> RANDOM LPAREN ID COMMA atomic_variable COMMA atomic_variable RPAREN SEMCOL
Rule 8     atomic_variable -> NUMBER
Rule 9     atomic_variable -> ID
Rule 10    var_assign -> TYPE ID LSPAREN NUMBER RSPAREN SEMCOL
Rule 11    var_assign -> TYPE ID SEMCOL
Rule 12    var_define -> ID EQUAL ATOMIC SEMCOL
Rule 13    var_define -> ID LSPAREN NUMBER RSPAREN EQUAL ATOMIC SEMCOL
Rule 14    var_define -> TYPE ID EQUAL ATOMIC SEMCOL
Rule 15    ForRandom -> RANDOM LPAREN ID COMMA atomic_variable RPAREN SEMCOL
Rule 16    ForRandom -> RANDOM LPAREN NUMBER COMMA atomic_variable RPAREN SEMCOL
Rule 17    ForRandom -> RANDOM LPAREN ID COMMA atomic_variable COMMA atomic_variable RPAREN SEMCOL
Rule 18    BalloonFor -> BALLOON LPAREN ID COMMA ID RPAREN SEMCOL
Rule 19    BalloonFor -> BALLOON LPAREN ID COMMA NUMBER RPAREN SEMCOL
Rule 20    BalloonFor -> BALLOON LPAREN NUMBER COMMA ID RPAREN SEMCOL
Rule 21    BalloonFor -> BALLOON LPAREN NUMBER COMMA NUMBER RPAREN SEMCOL
Rule 22    IncFor -> INC LPAREN ID COMMA atomic_variable RPAREN SEMCOL
Rule 23    DecFor -> DEC LPAREN ID COMMA atomic_variable RPAREN SEMCOL
Rule 24    Body -> IncFor Body
Rule 25    Body -> DecFor Body
Rule 26    Body -> BalloonFor Body
Rule 27    Body -> ForRandom Body
Rule 28    Body -> empty
Rule 29    For -> FOR NUMBER TIMES USING ID Body FOREND SEMCOL
Rule 30    Dow -> DOW LPAREN ID RPAREN Body ENDDO SEMCOL
Rule 31    Dow -> DOW LPAREN NUMBER RPAREN Body ENDDO SEMCOL
Rule 32    empty -> <empty>
Rule 33    TYPE -> INT
Rule 34    TYPE -> STRING LPAREN NUMBER RPAREN
Rule 35    ATOMIC -> NUMBER
Rule 36    ATOMIC -> TEXT

Terminals, with rules where they appear

ASIGNWORD            : 
BALLOON              : 18 19 20 21
BEGIN                : 
COMMA                : 7 7 15 16 17 17 18 19 20 21 22 23
DEC                  : 23
DIVIDE               : 
DO                   : 
DOW                  : 30 31
END                  : 
ENDDO                : 30 31
EQUAL                : 12 13 14
FOR                  : 29
FORASIGNWORD         : 
FOREND               : 29
GAME                 : 
ID                   : 7 9 10 11 12 13 14 15 17 18 18 19 20 22 23 29 30
INC                  : 22
INT                  : 33
LBRACE               : 
LPAREN               : 7 15 16 17 18 19 20 21 22 23 30 31 34
LSPAREN              : 10 13
MAIN                 : 
MINUS                : 
MULTI                : 
NUMBER               : 8 10 13 16 19 20 21 21 29 31 34 35
OBJECT               : 
PLUS                 : 
RANDOM               : 7 15 16 17
RBRACE               : 
RPAREN               : 7 15 16 17 18 19 20 21 22 23 30 31 34
RSPAREN              : 10 13
SEMCOL               : 7 10 11 12 13 14 15 16 17 18 19 20 21 22 23 29 30 31
SPIDERWEB            : 
STRING               : 34
TEXT                 : 36
TIMES                : 29
USING                : 29
error                : 

Nonterminals, with rules where they appear

ATOMIC               : 12 13 14
BalloonFor           : 26
Body                 : 24 25 26 27 29 30 31
DecFor               : 25
Dow                  : 4
For                  : 3
ForRandom            : 27
IncFor               : 24
Random               : 5
TYPE                 : 10 11 14
atomic_variable      : 7 7 15 16 17 17 22 23
empty                : 6 28
statements           : 1 2 3 4 5 0
var_assign           : 1
var_define           : 2

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . var_assign statements
    (2) statements -> . var_define statements
    (3) statements -> . For statements
    (4) statements -> . Dow statements
    (5) statements -> . Random statements
    (6) statements -> . empty
    (10) var_assign -> . TYPE ID LSPAREN NUMBER RSPAREN SEMCOL
    (11) var_assign -> . TYPE ID SEMCOL
    (12) var_define -> . ID EQUAL ATOMIC SEMCOL
    (13) var_define -> . ID LSPAREN NUMBER RSPAREN EQUAL ATOMIC SEMCOL
    (14) var_define -> . TYPE ID EQUAL ATOMIC SEMCOL
    (29) For -> . FOR NUMBER TIMES USING ID Body FOREND SEMCOL
    (30) Dow -> . DOW LPAREN ID RPAREN Body ENDDO SEMCOL
    (31) Dow -> . DOW LPAREN NUMBER RPAREN Body ENDDO SEMCOL
    (7) Random -> . RANDOM LPAREN ID COMMA atomic_variable COMMA atomic_variable RPAREN SEMCOL
    (32) empty -> .
    (33) TYPE -> . INT
    (34) TYPE -> . STRING LPAREN NUMBER RPAREN

    ID              shift and go to state 9
    FOR             shift and go to state 10
    DOW             shift and go to state 11
    RANDOM          shift and go to state 12
    $end            reduce using rule 32 (empty -> .)
    INT             shift and go to state 13
    STRING          shift and go to state 14

    statements                     shift and go to state 1
    var_assign                     shift and go to state 2
    var_define                     shift and go to state 3
    For                            shift and go to state 4
    Dow                            shift and go to state 5
    Random                         shift and go to state 6
    empty                          shift and go to state 7
    TYPE                           shift and go to state 8

state 1

    (0) S' -> statements .



state 2

    (1) statements -> var_assign . statements
    (1) statements -> . var_assign statements
    (2) statements -> . var_define statements
    (3) statements -> . For statements
    (4) statements -> . Dow statements
    (5) statements -> . Random statements
    (6) statements -> . empty
    (10) var_assign -> . TYPE ID LSPAREN NUMBER RSPAREN SEMCOL
    (11) var_assign -> . TYPE ID SEMCOL
    (12) var_define -> . ID EQUAL ATOMIC SEMCOL
    (13) var_define -> . ID LSPAREN NUMBER RSPAREN EQUAL ATOMIC SEMCOL
    (14) var_define -> . TYPE ID EQUAL ATOMIC SEMCOL
    (29) For -> . FOR NUMBER TIMES USING ID Body FOREND SEMCOL
    (30) Dow -> . DOW LPAREN ID RPAREN Body ENDDO SEMCOL
    (31) Dow -> . DOW LPAREN NUMBER RPAREN Body ENDDO SEMCOL
    (7) Random -> . RANDOM LPAREN ID COMMA atomic_variable COMMA atomic_variable RPAREN SEMCOL
    (32) empty -> .
    (33) TYPE -> . INT
    (34) TYPE -> . STRING LPAREN NUMBER RPAREN

    ID              shift and go to state 9
    FOR             shift and go to state 10
    DOW             shift and go to state 11
    RANDOM          shift and go to state 12
    $end            reduce using rule 32 (empty -> .)
    INT             shift and go to state 13
    STRING          shift and go to state 14

    var_assign                     shift and go to state 2
    statements                     shift and go to state 15
    var_define                     shift and go to state 3
    For                            shift and go to state 4
    Dow                            shift and go to state 5
    Random                         shift and go to state 6
    empty                          shift and go to state 7
    TYPE                           shift and go to state 8

state 3

    (2) statements -> var_define . statements
    (1) statements -> . var_assign statements
    (2) statements -> . var_define statements
    (3) statements -> . For statements
    (4) statements -> . Dow statements
    (5) statements -> . Random statements
    (6) statements -> . empty
    (10) var_assign -> . TYPE ID LSPAREN NUMBER RSPAREN SEMCOL
    (11) var_assign -> . TYPE ID SEMCOL
    (12) var_define -> . ID EQUAL ATOMIC SEMCOL
    (13) var_define -> . ID LSPAREN NUMBER RSPAREN EQUAL ATOMIC SEMCOL
    (14) var_define -> . TYPE ID EQUAL ATOMIC SEMCOL
    (29) For -> . FOR NUMBER TIMES USING ID Body FOREND SEMCOL
    (30) Dow -> . DOW LPAREN ID RPAREN Body ENDDO SEMCOL
    (31) Dow -> . DOW LPAREN NUMBER RPAREN Body ENDDO SEMCOL
    (7) Random -> . RANDOM LPAREN ID COMMA atomic_variable COMMA atomic_variable RPAREN SEMCOL
    (32) empty -> .
    (33) TYPE -> . INT
    (34) TYPE -> . STRING LPAREN NUMBER RPAREN

    ID              shift and go to state 9
    FOR             shift and go to state 10
    DOW             shift and go to state 11
    RANDOM          shift and go to state 12
    $end            reduce using rule 32 (empty -> .)
    INT             shift and go to state 13
    STRING          shift and go to state 14

    var_define                     shift and go to state 3
    statements                     shift and go to state 16
    var_assign                     shift and go to state 2
    For                            shift and go to state 4
    Dow                            shift and go to state 5
    Random                         shift and go to state 6
    empty                          shift and go to state 7
    TYPE                           shift and go to state 8

state 4

    (3) statements -> For . statements
    (1) statements -> . var_assign statements
    (2) statements -> . var_define statements
    (3) statements -> . For statements
    (4) statements -> . Dow statements
    (5) statements -> . Random statements
    (6) statements -> . empty
    (10) var_assign -> . TYPE ID LSPAREN NUMBER RSPAREN SEMCOL
    (11) var_assign -> . TYPE ID SEMCOL
    (12) var_define -> . ID EQUAL ATOMIC SEMCOL
    (13) var_define -> . ID LSPAREN NUMBER RSPAREN EQUAL ATOMIC SEMCOL
    (14) var_define -> . TYPE ID EQUAL ATOMIC SEMCOL
    (29) For -> . FOR NUMBER TIMES USING ID Body FOREND SEMCOL
    (30) Dow -> . DOW LPAREN ID RPAREN Body ENDDO SEMCOL
    (31) Dow -> . DOW LPAREN NUMBER RPAREN Body ENDDO SEMCOL
    (7) Random -> . RANDOM LPAREN ID COMMA atomic_variable COMMA atomic_variable RPAREN SEMCOL
    (32) empty -> .
    (33) TYPE -> . INT
    (34) TYPE -> . STRING LPAREN NUMBER RPAREN

    ID              shift and go to state 9
    FOR             shift and go to state 10
    DOW             shift and go to state 11
    RANDOM          shift and go to state 12
    $end            reduce using rule 32 (empty -> .)
    INT             shift and go to state 13
    STRING          shift and go to state 14

    For                            shift and go to state 4
    statements                     shift and go to state 17
    var_assign                     shift and go to state 2
    var_define                     shift and go to state 3
    Dow                            shift and go to state 5
    Random                         shift and go to state 6
    empty                          shift and go to state 7
    TYPE                           shift and go to state 8

state 5

    (4) statements -> Dow . statements
    (1) statements -> . var_assign statements
    (2) statements -> . var_define statements
    (3) statements -> . For statements
    (4) statements -> . Dow statements
    (5) statements -> . Random statements
    (6) statements -> . empty
    (10) var_assign -> . TYPE ID LSPAREN NUMBER RSPAREN SEMCOL
    (11) var_assign -> . TYPE ID SEMCOL
    (12) var_define -> . ID EQUAL ATOMIC SEMCOL
    (13) var_define -> . ID LSPAREN NUMBER RSPAREN EQUAL ATOMIC SEMCOL
    (14) var_define -> . TYPE ID EQUAL ATOMIC SEMCOL
    (29) For -> . FOR NUMBER TIMES USING ID Body FOREND SEMCOL
    (30) Dow -> . DOW LPAREN ID RPAREN Body ENDDO SEMCOL
    (31) Dow -> . DOW LPAREN NUMBER RPAREN Body ENDDO SEMCOL
    (7) Random -> . RANDOM LPAREN ID COMMA atomic_variable COMMA atomic_variable RPAREN SEMCOL
    (32) empty -> .
    (33) TYPE -> . INT
    (34) TYPE -> . STRING LPAREN NUMBER RPAREN

    ID              shift and go to state 9
    FOR             shift and go to state 10
    DOW             shift and go to state 11
    RANDOM          shift and go to state 12
    $end            reduce using rule 32 (empty -> .)
    INT             shift and go to state 13
    STRING          shift and go to state 14

    Dow                            shift and go to state 5
    statements                     shift and go to state 18
    var_assign                     shift and go to state 2
    var_define                     shift and go to state 3
    For                            shift and go to state 4
    Random                         shift and go to state 6
    empty                          shift and go to state 7
    TYPE                           shift and go to state 8

state 6

    (5) statements -> Random . statements
    (1) statements -> . var_assign statements
    (2) statements -> . var_define statements
    (3) statements -> . For statements
    (4) statements -> . Dow statements
    (5) statements -> . Random statements
    (6) statements -> . empty
    (10) var_assign -> . TYPE ID LSPAREN NUMBER RSPAREN SEMCOL
    (11) var_assign -> . TYPE ID SEMCOL
    (12) var_define -> . ID EQUAL ATOMIC SEMCOL
    (13) var_define -> . ID LSPAREN NUMBER RSPAREN EQUAL ATOMIC SEMCOL
    (14) var_define -> . TYPE ID EQUAL ATOMIC SEMCOL
    (29) For -> . FOR NUMBER TIMES USING ID Body FOREND SEMCOL
    (30) Dow -> . DOW LPAREN ID RPAREN Body ENDDO SEMCOL
    (31) Dow -> . DOW LPAREN NUMBER RPAREN Body ENDDO SEMCOL
    (7) Random -> . RANDOM LPAREN ID COMMA atomic_variable COMMA atomic_variable RPAREN SEMCOL
    (32) empty -> .
    (33) TYPE -> . INT
    (34) TYPE -> . STRING LPAREN NUMBER RPAREN

    ID              shift and go to state 9
    FOR             shift and go to state 10
    DOW             shift and go to state 11
    RANDOM          shift and go to state 12
    $end            reduce using rule 32 (empty -> .)
    INT             shift and go to state 13
    STRING          shift and go to state 14

    Random                         shift and go to state 6
    statements                     shift and go to state 19
    var_assign                     shift and go to state 2
    var_define                     shift and go to state 3
    For                            shift and go to state 4
    Dow                            shift and go to state 5
    empty                          shift and go to state 7
    TYPE                           shift and go to state 8

state 7

    (6) statements -> empty .

    $end            reduce using rule 6 (statements -> empty .)


state 8

    (10) var_assign -> TYPE . ID LSPAREN NUMBER RSPAREN SEMCOL
    (11) var_assign -> TYPE . ID SEMCOL
    (14) var_define -> TYPE . ID EQUAL ATOMIC SEMCOL

    ID              shift and go to state 20


state 9

    (12) var_define -> ID . EQUAL ATOMIC SEMCOL
    (13) var_define -> ID . LSPAREN NUMBER RSPAREN EQUAL ATOMIC SEMCOL

    EQUAL           shift and go to state 21
    LSPAREN         shift and go to state 22


state 10

    (29) For -> FOR . NUMBER TIMES USING ID Body FOREND SEMCOL

    NUMBER          shift and go to state 23


state 11

    (30) Dow -> DOW . LPAREN ID RPAREN Body ENDDO SEMCOL
    (31) Dow -> DOW . LPAREN NUMBER RPAREN Body ENDDO SEMCOL

    LPAREN          shift and go to state 24


state 12

    (7) Random -> RANDOM . LPAREN ID COMMA atomic_variable COMMA atomic_variable RPAREN SEMCOL

    LPAREN          shift and go to state 25


state 13

    (33) TYPE -> INT .

    ID              reduce using rule 33 (TYPE -> INT .)


state 14

    (34) TYPE -> STRING . LPAREN NUMBER RPAREN

    LPAREN          shift and go to state 26


state 15

    (1) statements -> var_assign statements .

    $end            reduce using rule 1 (statements -> var_assign statements .)


state 16

    (2) statements -> var_define statements .

    $end            reduce using rule 2 (statements -> var_define statements .)


state 17

    (3) statements -> For statements .

    $end            reduce using rule 3 (statements -> For statements .)


state 18

    (4) statements -> Dow statements .

    $end            reduce using rule 4 (statements -> Dow statements .)


state 19

    (5) statements -> Random statements .

    $end            reduce using rule 5 (statements -> Random statements .)


state 20

    (10) var_assign -> TYPE ID . LSPAREN NUMBER RSPAREN SEMCOL
    (11) var_assign -> TYPE ID . SEMCOL
    (14) var_define -> TYPE ID . EQUAL ATOMIC SEMCOL

    LSPAREN         shift and go to state 27
    SEMCOL          shift and go to state 28
    EQUAL           shift and go to state 29


state 21

    (12) var_define -> ID EQUAL . ATOMIC SEMCOL
    (35) ATOMIC -> . NUMBER
    (36) ATOMIC -> . TEXT

    NUMBER          shift and go to state 31
    TEXT            shift and go to state 32

    ATOMIC                         shift and go to state 30

state 22

    (13) var_define -> ID LSPAREN . NUMBER RSPAREN EQUAL ATOMIC SEMCOL

    NUMBER          shift and go to state 33


state 23

    (29) For -> FOR NUMBER . TIMES USING ID Body FOREND SEMCOL

    TIMES           shift and go to state 34


state 24

    (30) Dow -> DOW LPAREN . ID RPAREN Body ENDDO SEMCOL
    (31) Dow -> DOW LPAREN . NUMBER RPAREN Body ENDDO SEMCOL

    ID              shift and go to state 35
    NUMBER          shift and go to state 36


state 25

    (7) Random -> RANDOM LPAREN . ID COMMA atomic_variable COMMA atomic_variable RPAREN SEMCOL

    ID              shift and go to state 37


state 26

    (34) TYPE -> STRING LPAREN . NUMBER RPAREN

    NUMBER          shift and go to state 38


state 27

    (10) var_assign -> TYPE ID LSPAREN . NUMBER RSPAREN SEMCOL

    NUMBER          shift and go to state 39


state 28

    (11) var_assign -> TYPE ID SEMCOL .

    ID              reduce using rule 11 (var_assign -> TYPE ID SEMCOL .)
    FOR             reduce using rule 11 (var_assign -> TYPE ID SEMCOL .)
    DOW             reduce using rule 11 (var_assign -> TYPE ID SEMCOL .)
    RANDOM          reduce using rule 11 (var_assign -> TYPE ID SEMCOL .)
    INT             reduce using rule 11 (var_assign -> TYPE ID SEMCOL .)
    STRING          reduce using rule 11 (var_assign -> TYPE ID SEMCOL .)
    $end            reduce using rule 11 (var_assign -> TYPE ID SEMCOL .)


state 29

    (14) var_define -> TYPE ID EQUAL . ATOMIC SEMCOL
    (35) ATOMIC -> . NUMBER
    (36) ATOMIC -> . TEXT

    NUMBER          shift and go to state 31
    TEXT            shift and go to state 32

    ATOMIC                         shift and go to state 40

state 30

    (12) var_define -> ID EQUAL ATOMIC . SEMCOL

    SEMCOL          shift and go to state 41


state 31

    (35) ATOMIC -> NUMBER .

    SEMCOL          reduce using rule 35 (ATOMIC -> NUMBER .)


state 32

    (36) ATOMIC -> TEXT .

    SEMCOL          reduce using rule 36 (ATOMIC -> TEXT .)


state 33

    (13) var_define -> ID LSPAREN NUMBER . RSPAREN EQUAL ATOMIC SEMCOL

    RSPAREN         shift and go to state 42


state 34

    (29) For -> FOR NUMBER TIMES . USING ID Body FOREND SEMCOL

    USING           shift and go to state 43


state 35

    (30) Dow -> DOW LPAREN ID . RPAREN Body ENDDO SEMCOL

    RPAREN          shift and go to state 44


state 36

    (31) Dow -> DOW LPAREN NUMBER . RPAREN Body ENDDO SEMCOL

    RPAREN          shift and go to state 45


state 37

    (7) Random -> RANDOM LPAREN ID . COMMA atomic_variable COMMA atomic_variable RPAREN SEMCOL

    COMMA           shift and go to state 46


state 38

    (34) TYPE -> STRING LPAREN NUMBER . RPAREN

    RPAREN          shift and go to state 47


state 39

    (10) var_assign -> TYPE ID LSPAREN NUMBER . RSPAREN SEMCOL

    RSPAREN         shift and go to state 48


state 40

    (14) var_define -> TYPE ID EQUAL ATOMIC . SEMCOL

    SEMCOL          shift and go to state 49


state 41

    (12) var_define -> ID EQUAL ATOMIC SEMCOL .

    ID              reduce using rule 12 (var_define -> ID EQUAL ATOMIC SEMCOL .)
    FOR             reduce using rule 12 (var_define -> ID EQUAL ATOMIC SEMCOL .)
    DOW             reduce using rule 12 (var_define -> ID EQUAL ATOMIC SEMCOL .)
    RANDOM          reduce using rule 12 (var_define -> ID EQUAL ATOMIC SEMCOL .)
    INT             reduce using rule 12 (var_define -> ID EQUAL ATOMIC SEMCOL .)
    STRING          reduce using rule 12 (var_define -> ID EQUAL ATOMIC SEMCOL .)
    $end            reduce using rule 12 (var_define -> ID EQUAL ATOMIC SEMCOL .)


state 42

    (13) var_define -> ID LSPAREN NUMBER RSPAREN . EQUAL ATOMIC SEMCOL

    EQUAL           shift and go to state 50


state 43

    (29) For -> FOR NUMBER TIMES USING . ID Body FOREND SEMCOL

    ID              shift and go to state 51


state 44

    (30) Dow -> DOW LPAREN ID RPAREN . Body ENDDO SEMCOL
    (24) Body -> . IncFor Body
    (25) Body -> . DecFor Body
    (26) Body -> . BalloonFor Body
    (27) Body -> . ForRandom Body
    (28) Body -> . empty
    (22) IncFor -> . INC LPAREN ID COMMA atomic_variable RPAREN SEMCOL
    (23) DecFor -> . DEC LPAREN ID COMMA atomic_variable RPAREN SEMCOL
    (18) BalloonFor -> . BALLOON LPAREN ID COMMA ID RPAREN SEMCOL
    (19) BalloonFor -> . BALLOON LPAREN ID COMMA NUMBER RPAREN SEMCOL
    (20) BalloonFor -> . BALLOON LPAREN NUMBER COMMA ID RPAREN SEMCOL
    (21) BalloonFor -> . BALLOON LPAREN NUMBER COMMA NUMBER RPAREN SEMCOL
    (15) ForRandom -> . RANDOM LPAREN ID COMMA atomic_variable RPAREN SEMCOL
    (16) ForRandom -> . RANDOM LPAREN NUMBER COMMA atomic_variable RPAREN SEMCOL
    (17) ForRandom -> . RANDOM LPAREN ID COMMA atomic_variable COMMA atomic_variable RPAREN SEMCOL
    (32) empty -> .

    INC             shift and go to state 58
    DEC             shift and go to state 59
    BALLOON         shift and go to state 60
    RANDOM          shift and go to state 61
    ENDDO           reduce using rule 32 (empty -> .)

    Body                           shift and go to state 52
    IncFor                         shift and go to state 53
    DecFor                         shift and go to state 54
    BalloonFor                     shift and go to state 55
    ForRandom                      shift and go to state 56
    empty                          shift and go to state 57

state 45

    (31) Dow -> DOW LPAREN NUMBER RPAREN . Body ENDDO SEMCOL
    (24) Body -> . IncFor Body
    (25) Body -> . DecFor Body
    (26) Body -> . BalloonFor Body
    (27) Body -> . ForRandom Body
    (28) Body -> . empty
    (22) IncFor -> . INC LPAREN ID COMMA atomic_variable RPAREN SEMCOL
    (23) DecFor -> . DEC LPAREN ID COMMA atomic_variable RPAREN SEMCOL
    (18) BalloonFor -> . BALLOON LPAREN ID COMMA ID RPAREN SEMCOL
    (19) BalloonFor -> . BALLOON LPAREN ID COMMA NUMBER RPAREN SEMCOL
    (20) BalloonFor -> . BALLOON LPAREN NUMBER COMMA ID RPAREN SEMCOL
    (21) BalloonFor -> . BALLOON LPAREN NUMBER COMMA NUMBER RPAREN SEMCOL
    (15) ForRandom -> . RANDOM LPAREN ID COMMA atomic_variable RPAREN SEMCOL
    (16) ForRandom -> . RANDOM LPAREN NUMBER COMMA atomic_variable RPAREN SEMCOL
    (17) ForRandom -> . RANDOM LPAREN ID COMMA atomic_variable COMMA atomic_variable RPAREN SEMCOL
    (32) empty -> .

    INC             shift and go to state 58
    DEC             shift and go to state 59
    BALLOON         shift and go to state 60
    RANDOM          shift and go to state 61
    ENDDO           reduce using rule 32 (empty -> .)

    Body                           shift and go to state 62
    IncFor                         shift and go to state 53
    DecFor                         shift and go to state 54
    BalloonFor                     shift and go to state 55
    ForRandom                      shift and go to state 56
    empty                          shift and go to state 57

state 46

    (7) Random -> RANDOM LPAREN ID COMMA . atomic_variable COMMA atomic_variable RPAREN SEMCOL
    (8) atomic_variable -> . NUMBER
    (9) atomic_variable -> . ID

    NUMBER          shift and go to state 65
    ID              shift and go to state 63

    atomic_variable                shift and go to state 64

state 47

    (34) TYPE -> STRING LPAREN NUMBER RPAREN .

    ID              reduce using rule 34 (TYPE -> STRING LPAREN NUMBER RPAREN .)


state 48

    (10) var_assign -> TYPE ID LSPAREN NUMBER RSPAREN . SEMCOL

    SEMCOL          shift and go to state 66


state 49

    (14) var_define -> TYPE ID EQUAL ATOMIC SEMCOL .

    ID              reduce using rule 14 (var_define -> TYPE ID EQUAL ATOMIC SEMCOL .)
    FOR             reduce using rule 14 (var_define -> TYPE ID EQUAL ATOMIC SEMCOL .)
    DOW             reduce using rule 14 (var_define -> TYPE ID EQUAL ATOMIC SEMCOL .)
    RANDOM          reduce using rule 14 (var_define -> TYPE ID EQUAL ATOMIC SEMCOL .)
    INT             reduce using rule 14 (var_define -> TYPE ID EQUAL ATOMIC SEMCOL .)
    STRING          reduce using rule 14 (var_define -> TYPE ID EQUAL ATOMIC SEMCOL .)
    $end            reduce using rule 14 (var_define -> TYPE ID EQUAL ATOMIC SEMCOL .)


state 50

    (13) var_define -> ID LSPAREN NUMBER RSPAREN EQUAL . ATOMIC SEMCOL
    (35) ATOMIC -> . NUMBER
    (36) ATOMIC -> . TEXT

    NUMBER          shift and go to state 31
    TEXT            shift and go to state 32

    ATOMIC                         shift and go to state 67

state 51

    (29) For -> FOR NUMBER TIMES USING ID . Body FOREND SEMCOL
    (24) Body -> . IncFor Body
    (25) Body -> . DecFor Body
    (26) Body -> . BalloonFor Body
    (27) Body -> . ForRandom Body
    (28) Body -> . empty
    (22) IncFor -> . INC LPAREN ID COMMA atomic_variable RPAREN SEMCOL
    (23) DecFor -> . DEC LPAREN ID COMMA atomic_variable RPAREN SEMCOL
    (18) BalloonFor -> . BALLOON LPAREN ID COMMA ID RPAREN SEMCOL
    (19) BalloonFor -> . BALLOON LPAREN ID COMMA NUMBER RPAREN SEMCOL
    (20) BalloonFor -> . BALLOON LPAREN NUMBER COMMA ID RPAREN SEMCOL
    (21) BalloonFor -> . BALLOON LPAREN NUMBER COMMA NUMBER RPAREN SEMCOL
    (15) ForRandom -> . RANDOM LPAREN ID COMMA atomic_variable RPAREN SEMCOL
    (16) ForRandom -> . RANDOM LPAREN NUMBER COMMA atomic_variable RPAREN SEMCOL
    (17) ForRandom -> . RANDOM LPAREN ID COMMA atomic_variable COMMA atomic_variable RPAREN SEMCOL
    (32) empty -> .

    INC             shift and go to state 58
    DEC             shift and go to state 59
    BALLOON         shift and go to state 60
    RANDOM          shift and go to state 61
    FOREND          reduce using rule 32 (empty -> .)

    Body                           shift and go to state 68
    IncFor                         shift and go to state 53
    DecFor                         shift and go to state 54
    BalloonFor                     shift and go to state 55
    ForRandom                      shift and go to state 56
    empty                          shift and go to state 57

state 52

    (30) Dow -> DOW LPAREN ID RPAREN Body . ENDDO SEMCOL

    ENDDO           shift and go to state 69


state 53

    (24) Body -> IncFor . Body
    (24) Body -> . IncFor Body
    (25) Body -> . DecFor Body
    (26) Body -> . BalloonFor Body
    (27) Body -> . ForRandom Body
    (28) Body -> . empty
    (22) IncFor -> . INC LPAREN ID COMMA atomic_variable RPAREN SEMCOL
    (23) DecFor -> . DEC LPAREN ID COMMA atomic_variable RPAREN SEMCOL
    (18) BalloonFor -> . BALLOON LPAREN ID COMMA ID RPAREN SEMCOL
    (19) BalloonFor -> . BALLOON LPAREN ID COMMA NUMBER RPAREN SEMCOL
    (20) BalloonFor -> . BALLOON LPAREN NUMBER COMMA ID RPAREN SEMCOL
    (21) BalloonFor -> . BALLOON LPAREN NUMBER COMMA NUMBER RPAREN SEMCOL
    (15) ForRandom -> . RANDOM LPAREN ID COMMA atomic_variable RPAREN SEMCOL
    (16) ForRandom -> . RANDOM LPAREN NUMBER COMMA atomic_variable RPAREN SEMCOL
    (17) ForRandom -> . RANDOM LPAREN ID COMMA atomic_variable COMMA atomic_variable RPAREN SEMCOL
    (32) empty -> .

    INC             shift and go to state 58
    DEC             shift and go to state 59
    BALLOON         shift and go to state 60
    RANDOM          shift and go to state 61
    ENDDO           reduce using rule 32 (empty -> .)
    FOREND          reduce using rule 32 (empty -> .)

    IncFor                         shift and go to state 53
    Body                           shift and go to state 70
    DecFor                         shift and go to state 54
    BalloonFor                     shift and go to state 55
    ForRandom                      shift and go to state 56
    empty                          shift and go to state 57

state 54

    (25) Body -> DecFor . Body
    (24) Body -> . IncFor Body
    (25) Body -> . DecFor Body
    (26) Body -> . BalloonFor Body
    (27) Body -> . ForRandom Body
    (28) Body -> . empty
    (22) IncFor -> . INC LPAREN ID COMMA atomic_variable RPAREN SEMCOL
    (23) DecFor -> . DEC LPAREN ID COMMA atomic_variable RPAREN SEMCOL
    (18) BalloonFor -> . BALLOON LPAREN ID COMMA ID RPAREN SEMCOL
    (19) BalloonFor -> . BALLOON LPAREN ID COMMA NUMBER RPAREN SEMCOL
    (20) BalloonFor -> . BALLOON LPAREN NUMBER COMMA ID RPAREN SEMCOL
    (21) BalloonFor -> . BALLOON LPAREN NUMBER COMMA NUMBER RPAREN SEMCOL
    (15) ForRandom -> . RANDOM LPAREN ID COMMA atomic_variable RPAREN SEMCOL
    (16) ForRandom -> . RANDOM LPAREN NUMBER COMMA atomic_variable RPAREN SEMCOL
    (17) ForRandom -> . RANDOM LPAREN ID COMMA atomic_variable COMMA atomic_variable RPAREN SEMCOL
    (32) empty -> .

    INC             shift and go to state 58
    DEC             shift and go to state 59
    BALLOON         shift and go to state 60
    RANDOM          shift and go to state 61
    ENDDO           reduce using rule 32 (empty -> .)
    FOREND          reduce using rule 32 (empty -> .)

    DecFor                         shift and go to state 54
    Body                           shift and go to state 71
    IncFor                         shift and go to state 53
    BalloonFor                     shift and go to state 55
    ForRandom                      shift and go to state 56
    empty                          shift and go to state 57

state 55

    (26) Body -> BalloonFor . Body
    (24) Body -> . IncFor Body
    (25) Body -> . DecFor Body
    (26) Body -> . BalloonFor Body
    (27) Body -> . ForRandom Body
    (28) Body -> . empty
    (22) IncFor -> . INC LPAREN ID COMMA atomic_variable RPAREN SEMCOL
    (23) DecFor -> . DEC LPAREN ID COMMA atomic_variable RPAREN SEMCOL
    (18) BalloonFor -> . BALLOON LPAREN ID COMMA ID RPAREN SEMCOL
    (19) BalloonFor -> . BALLOON LPAREN ID COMMA NUMBER RPAREN SEMCOL
    (20) BalloonFor -> . BALLOON LPAREN NUMBER COMMA ID RPAREN SEMCOL
    (21) BalloonFor -> . BALLOON LPAREN NUMBER COMMA NUMBER RPAREN SEMCOL
    (15) ForRandom -> . RANDOM LPAREN ID COMMA atomic_variable RPAREN SEMCOL
    (16) ForRandom -> . RANDOM LPAREN NUMBER COMMA atomic_variable RPAREN SEMCOL
    (17) ForRandom -> . RANDOM LPAREN ID COMMA atomic_variable COMMA atomic_variable RPAREN SEMCOL
    (32) empty -> .

    INC             shift and go to state 58
    DEC             shift and go to state 59
    BALLOON         shift and go to state 60
    RANDOM          shift and go to state 61
    ENDDO           reduce using rule 32 (empty -> .)
    FOREND          reduce using rule 32 (empty -> .)

    BalloonFor                     shift and go to state 55
    Body                           shift and go to state 72
    IncFor                         shift and go to state 53
    DecFor                         shift and go to state 54
    ForRandom                      shift and go to state 56
    empty                          shift and go to state 57

state 56

    (27) Body -> ForRandom . Body
    (24) Body -> . IncFor Body
    (25) Body -> . DecFor Body
    (26) Body -> . BalloonFor Body
    (27) Body -> . ForRandom Body
    (28) Body -> . empty
    (22) IncFor -> . INC LPAREN ID COMMA atomic_variable RPAREN SEMCOL
    (23) DecFor -> . DEC LPAREN ID COMMA atomic_variable RPAREN SEMCOL
    (18) BalloonFor -> . BALLOON LPAREN ID COMMA ID RPAREN SEMCOL
    (19) BalloonFor -> . BALLOON LPAREN ID COMMA NUMBER RPAREN SEMCOL
    (20) BalloonFor -> . BALLOON LPAREN NUMBER COMMA ID RPAREN SEMCOL
    (21) BalloonFor -> . BALLOON LPAREN NUMBER COMMA NUMBER RPAREN SEMCOL
    (15) ForRandom -> . RANDOM LPAREN ID COMMA atomic_variable RPAREN SEMCOL
    (16) ForRandom -> . RANDOM LPAREN NUMBER COMMA atomic_variable RPAREN SEMCOL
    (17) ForRandom -> . RANDOM LPAREN ID COMMA atomic_variable COMMA atomic_variable RPAREN SEMCOL
    (32) empty -> .

    INC             shift and go to state 58
    DEC             shift and go to state 59
    BALLOON         shift and go to state 60
    RANDOM          shift and go to state 61
    ENDDO           reduce using rule 32 (empty -> .)
    FOREND          reduce using rule 32 (empty -> .)

    ForRandom                      shift and go to state 56
    Body                           shift and go to state 73
    IncFor                         shift and go to state 53
    DecFor                         shift and go to state 54
    BalloonFor                     shift and go to state 55
    empty                          shift and go to state 57

state 57

    (28) Body -> empty .

    ENDDO           reduce using rule 28 (Body -> empty .)
    FOREND          reduce using rule 28 (Body -> empty .)


state 58

    (22) IncFor -> INC . LPAREN ID COMMA atomic_variable RPAREN SEMCOL

    LPAREN          shift and go to state 74


state 59

    (23) DecFor -> DEC . LPAREN ID COMMA atomic_variable RPAREN SEMCOL

    LPAREN          shift and go to state 75


state 60

    (18) BalloonFor -> BALLOON . LPAREN ID COMMA ID RPAREN SEMCOL
    (19) BalloonFor -> BALLOON . LPAREN ID COMMA NUMBER RPAREN SEMCOL
    (20) BalloonFor -> BALLOON . LPAREN NUMBER COMMA ID RPAREN SEMCOL
    (21) BalloonFor -> BALLOON . LPAREN NUMBER COMMA NUMBER RPAREN SEMCOL

    LPAREN          shift and go to state 76


state 61

    (15) ForRandom -> RANDOM . LPAREN ID COMMA atomic_variable RPAREN SEMCOL
    (16) ForRandom -> RANDOM . LPAREN NUMBER COMMA atomic_variable RPAREN SEMCOL
    (17) ForRandom -> RANDOM . LPAREN ID COMMA atomic_variable COMMA atomic_variable RPAREN SEMCOL

    LPAREN          shift and go to state 77


state 62

    (31) Dow -> DOW LPAREN NUMBER RPAREN Body . ENDDO SEMCOL

    ENDDO           shift and go to state 78


state 63

    (9) atomic_variable -> ID .

    COMMA           reduce using rule 9 (atomic_variable -> ID .)
    RPAREN          reduce using rule 9 (atomic_variable -> ID .)


state 64

    (7) Random -> RANDOM LPAREN ID COMMA atomic_variable . COMMA atomic_variable RPAREN SEMCOL

    COMMA           shift and go to state 79


state 65

    (8) atomic_variable -> NUMBER .

    COMMA           reduce using rule 8 (atomic_variable -> NUMBER .)
    RPAREN          reduce using rule 8 (atomic_variable -> NUMBER .)


state 66

    (10) var_assign -> TYPE ID LSPAREN NUMBER RSPAREN SEMCOL .

    ID              reduce using rule 10 (var_assign -> TYPE ID LSPAREN NUMBER RSPAREN SEMCOL .)
    FOR             reduce using rule 10 (var_assign -> TYPE ID LSPAREN NUMBER RSPAREN SEMCOL .)
    DOW             reduce using rule 10 (var_assign -> TYPE ID LSPAREN NUMBER RSPAREN SEMCOL .)
    RANDOM          reduce using rule 10 (var_assign -> TYPE ID LSPAREN NUMBER RSPAREN SEMCOL .)
    INT             reduce using rule 10 (var_assign -> TYPE ID LSPAREN NUMBER RSPAREN SEMCOL .)
    STRING          reduce using rule 10 (var_assign -> TYPE ID LSPAREN NUMBER RSPAREN SEMCOL .)
    $end            reduce using rule 10 (var_assign -> TYPE ID LSPAREN NUMBER RSPAREN SEMCOL .)


state 67

    (13) var_define -> ID LSPAREN NUMBER RSPAREN EQUAL ATOMIC . SEMCOL

    SEMCOL          shift and go to state 80


state 68

    (29) For -> FOR NUMBER TIMES USING ID Body . FOREND SEMCOL

    FOREND          shift and go to state 81


state 69

    (30) Dow -> DOW LPAREN ID RPAREN Body ENDDO . SEMCOL

    SEMCOL          shift and go to state 82


state 70

    (24) Body -> IncFor Body .

    ENDDO           reduce using rule 24 (Body -> IncFor Body .)
    FOREND          reduce using rule 24 (Body -> IncFor Body .)


state 71

    (25) Body -> DecFor Body .

    ENDDO           reduce using rule 25 (Body -> DecFor Body .)
    FOREND          reduce using rule 25 (Body -> DecFor Body .)


state 72

    (26) Body -> BalloonFor Body .

    ENDDO           reduce using rule 26 (Body -> BalloonFor Body .)
    FOREND          reduce using rule 26 (Body -> BalloonFor Body .)


state 73

    (27) Body -> ForRandom Body .

    ENDDO           reduce using rule 27 (Body -> ForRandom Body .)
    FOREND          reduce using rule 27 (Body -> ForRandom Body .)


state 74

    (22) IncFor -> INC LPAREN . ID COMMA atomic_variable RPAREN SEMCOL

    ID              shift and go to state 83


state 75

    (23) DecFor -> DEC LPAREN . ID COMMA atomic_variable RPAREN SEMCOL

    ID              shift and go to state 84


state 76

    (18) BalloonFor -> BALLOON LPAREN . ID COMMA ID RPAREN SEMCOL
    (19) BalloonFor -> BALLOON LPAREN . ID COMMA NUMBER RPAREN SEMCOL
    (20) BalloonFor -> BALLOON LPAREN . NUMBER COMMA ID RPAREN SEMCOL
    (21) BalloonFor -> BALLOON LPAREN . NUMBER COMMA NUMBER RPAREN SEMCOL

    ID              shift and go to state 85
    NUMBER          shift and go to state 86


state 77

    (15) ForRandom -> RANDOM LPAREN . ID COMMA atomic_variable RPAREN SEMCOL
    (16) ForRandom -> RANDOM LPAREN . NUMBER COMMA atomic_variable RPAREN SEMCOL
    (17) ForRandom -> RANDOM LPAREN . ID COMMA atomic_variable COMMA atomic_variable RPAREN SEMCOL

    ID              shift and go to state 87
    NUMBER          shift and go to state 88


state 78

    (31) Dow -> DOW LPAREN NUMBER RPAREN Body ENDDO . SEMCOL

    SEMCOL          shift and go to state 89


state 79

    (7) Random -> RANDOM LPAREN ID COMMA atomic_variable COMMA . atomic_variable RPAREN SEMCOL
    (8) atomic_variable -> . NUMBER
    (9) atomic_variable -> . ID

    NUMBER          shift and go to state 65
    ID              shift and go to state 63

    atomic_variable                shift and go to state 90

state 80

    (13) var_define -> ID LSPAREN NUMBER RSPAREN EQUAL ATOMIC SEMCOL .

    ID              reduce using rule 13 (var_define -> ID LSPAREN NUMBER RSPAREN EQUAL ATOMIC SEMCOL .)
    FOR             reduce using rule 13 (var_define -> ID LSPAREN NUMBER RSPAREN EQUAL ATOMIC SEMCOL .)
    DOW             reduce using rule 13 (var_define -> ID LSPAREN NUMBER RSPAREN EQUAL ATOMIC SEMCOL .)
    RANDOM          reduce using rule 13 (var_define -> ID LSPAREN NUMBER RSPAREN EQUAL ATOMIC SEMCOL .)
    INT             reduce using rule 13 (var_define -> ID LSPAREN NUMBER RSPAREN EQUAL ATOMIC SEMCOL .)
    STRING          reduce using rule 13 (var_define -> ID LSPAREN NUMBER RSPAREN EQUAL ATOMIC SEMCOL .)
    $end            reduce using rule 13 (var_define -> ID LSPAREN NUMBER RSPAREN EQUAL ATOMIC SEMCOL .)


state 81

    (29) For -> FOR NUMBER TIMES USING ID Body FOREND . SEMCOL

    SEMCOL          shift and go to state 91


state 82

    (30) Dow -> DOW LPAREN ID RPAREN Body ENDDO SEMCOL .

    ID              reduce using rule 30 (Dow -> DOW LPAREN ID RPAREN Body ENDDO SEMCOL .)
    FOR             reduce using rule 30 (Dow -> DOW LPAREN ID RPAREN Body ENDDO SEMCOL .)
    DOW             reduce using rule 30 (Dow -> DOW LPAREN ID RPAREN Body ENDDO SEMCOL .)
    RANDOM          reduce using rule 30 (Dow -> DOW LPAREN ID RPAREN Body ENDDO SEMCOL .)
    INT             reduce using rule 30 (Dow -> DOW LPAREN ID RPAREN Body ENDDO SEMCOL .)
    STRING          reduce using rule 30 (Dow -> DOW LPAREN ID RPAREN Body ENDDO SEMCOL .)
    $end            reduce using rule 30 (Dow -> DOW LPAREN ID RPAREN Body ENDDO SEMCOL .)


state 83

    (22) IncFor -> INC LPAREN ID . COMMA atomic_variable RPAREN SEMCOL

    COMMA           shift and go to state 92


state 84

    (23) DecFor -> DEC LPAREN ID . COMMA atomic_variable RPAREN SEMCOL

    COMMA           shift and go to state 93


state 85

    (18) BalloonFor -> BALLOON LPAREN ID . COMMA ID RPAREN SEMCOL
    (19) BalloonFor -> BALLOON LPAREN ID . COMMA NUMBER RPAREN SEMCOL

    COMMA           shift and go to state 94


state 86

    (20) BalloonFor -> BALLOON LPAREN NUMBER . COMMA ID RPAREN SEMCOL
    (21) BalloonFor -> BALLOON LPAREN NUMBER . COMMA NUMBER RPAREN SEMCOL

    COMMA           shift and go to state 95


state 87

    (15) ForRandom -> RANDOM LPAREN ID . COMMA atomic_variable RPAREN SEMCOL
    (17) ForRandom -> RANDOM LPAREN ID . COMMA atomic_variable COMMA atomic_variable RPAREN SEMCOL

    COMMA           shift and go to state 96


state 88

    (16) ForRandom -> RANDOM LPAREN NUMBER . COMMA atomic_variable RPAREN SEMCOL

    COMMA           shift and go to state 97


state 89

    (31) Dow -> DOW LPAREN NUMBER RPAREN Body ENDDO SEMCOL .

    ID              reduce using rule 31 (Dow -> DOW LPAREN NUMBER RPAREN Body ENDDO SEMCOL .)
    FOR             reduce using rule 31 (Dow -> DOW LPAREN NUMBER RPAREN Body ENDDO SEMCOL .)
    DOW             reduce using rule 31 (Dow -> DOW LPAREN NUMBER RPAREN Body ENDDO SEMCOL .)
    RANDOM          reduce using rule 31 (Dow -> DOW LPAREN NUMBER RPAREN Body ENDDO SEMCOL .)
    INT             reduce using rule 31 (Dow -> DOW LPAREN NUMBER RPAREN Body ENDDO SEMCOL .)
    STRING          reduce using rule 31 (Dow -> DOW LPAREN NUMBER RPAREN Body ENDDO SEMCOL .)
    $end            reduce using rule 31 (Dow -> DOW LPAREN NUMBER RPAREN Body ENDDO SEMCOL .)


state 90

    (7) Random -> RANDOM LPAREN ID COMMA atomic_variable COMMA atomic_variable . RPAREN SEMCOL

    RPAREN          shift and go to state 98


state 91

    (29) For -> FOR NUMBER TIMES USING ID Body FOREND SEMCOL .

    ID              reduce using rule 29 (For -> FOR NUMBER TIMES USING ID Body FOREND SEMCOL .)
    FOR             reduce using rule 29 (For -> FOR NUMBER TIMES USING ID Body FOREND SEMCOL .)
    DOW             reduce using rule 29 (For -> FOR NUMBER TIMES USING ID Body FOREND SEMCOL .)
    RANDOM          reduce using rule 29 (For -> FOR NUMBER TIMES USING ID Body FOREND SEMCOL .)
    INT             reduce using rule 29 (For -> FOR NUMBER TIMES USING ID Body FOREND SEMCOL .)
    STRING          reduce using rule 29 (For -> FOR NUMBER TIMES USING ID Body FOREND SEMCOL .)
    $end            reduce using rule 29 (For -> FOR NUMBER TIMES USING ID Body FOREND SEMCOL .)


state 92

    (22) IncFor -> INC LPAREN ID COMMA . atomic_variable RPAREN SEMCOL
    (8) atomic_variable -> . NUMBER
    (9) atomic_variable -> . ID

    NUMBER          shift and go to state 65
    ID              shift and go to state 63

    atomic_variable                shift and go to state 99

state 93

    (23) DecFor -> DEC LPAREN ID COMMA . atomic_variable RPAREN SEMCOL
    (8) atomic_variable -> . NUMBER
    (9) atomic_variable -> . ID

    NUMBER          shift and go to state 65
    ID              shift and go to state 63

    atomic_variable                shift and go to state 100

state 94

    (18) BalloonFor -> BALLOON LPAREN ID COMMA . ID RPAREN SEMCOL
    (19) BalloonFor -> BALLOON LPAREN ID COMMA . NUMBER RPAREN SEMCOL

    ID              shift and go to state 101
    NUMBER          shift and go to state 102


state 95

    (20) BalloonFor -> BALLOON LPAREN NUMBER COMMA . ID RPAREN SEMCOL
    (21) BalloonFor -> BALLOON LPAREN NUMBER COMMA . NUMBER RPAREN SEMCOL

    ID              shift and go to state 104
    NUMBER          shift and go to state 103


state 96

    (15) ForRandom -> RANDOM LPAREN ID COMMA . atomic_variable RPAREN SEMCOL
    (17) ForRandom -> RANDOM LPAREN ID COMMA . atomic_variable COMMA atomic_variable RPAREN SEMCOL
    (8) atomic_variable -> . NUMBER
    (9) atomic_variable -> . ID

    NUMBER          shift and go to state 65
    ID              shift and go to state 63

    atomic_variable                shift and go to state 105

state 97

    (16) ForRandom -> RANDOM LPAREN NUMBER COMMA . atomic_variable RPAREN SEMCOL
    (8) atomic_variable -> . NUMBER
    (9) atomic_variable -> . ID

    NUMBER          shift and go to state 65
    ID              shift and go to state 63

    atomic_variable                shift and go to state 106

state 98

    (7) Random -> RANDOM LPAREN ID COMMA atomic_variable COMMA atomic_variable RPAREN . SEMCOL

    SEMCOL          shift and go to state 107


state 99

    (22) IncFor -> INC LPAREN ID COMMA atomic_variable . RPAREN SEMCOL

    RPAREN          shift and go to state 108


state 100

    (23) DecFor -> DEC LPAREN ID COMMA atomic_variable . RPAREN SEMCOL

    RPAREN          shift and go to state 109


state 101

    (18) BalloonFor -> BALLOON LPAREN ID COMMA ID . RPAREN SEMCOL

    RPAREN          shift and go to state 110


state 102

    (19) BalloonFor -> BALLOON LPAREN ID COMMA NUMBER . RPAREN SEMCOL

    RPAREN          shift and go to state 111


state 103

    (21) BalloonFor -> BALLOON LPAREN NUMBER COMMA NUMBER . RPAREN SEMCOL

    RPAREN          shift and go to state 112


state 104

    (20) BalloonFor -> BALLOON LPAREN NUMBER COMMA ID . RPAREN SEMCOL

    RPAREN          shift and go to state 113


state 105

    (15) ForRandom -> RANDOM LPAREN ID COMMA atomic_variable . RPAREN SEMCOL
    (17) ForRandom -> RANDOM LPAREN ID COMMA atomic_variable . COMMA atomic_variable RPAREN SEMCOL

    RPAREN          shift and go to state 115
    COMMA           shift and go to state 114


state 106

    (16) ForRandom -> RANDOM LPAREN NUMBER COMMA atomic_variable . RPAREN SEMCOL

    RPAREN          shift and go to state 116


state 107

    (7) Random -> RANDOM LPAREN ID COMMA atomic_variable COMMA atomic_variable RPAREN SEMCOL .

    ID              reduce using rule 7 (Random -> RANDOM LPAREN ID COMMA atomic_variable COMMA atomic_variable RPAREN SEMCOL .)
    FOR             reduce using rule 7 (Random -> RANDOM LPAREN ID COMMA atomic_variable COMMA atomic_variable RPAREN SEMCOL .)
    DOW             reduce using rule 7 (Random -> RANDOM LPAREN ID COMMA atomic_variable COMMA atomic_variable RPAREN SEMCOL .)
    RANDOM          reduce using rule 7 (Random -> RANDOM LPAREN ID COMMA atomic_variable COMMA atomic_variable RPAREN SEMCOL .)
    INT             reduce using rule 7 (Random -> RANDOM LPAREN ID COMMA atomic_variable COMMA atomic_variable RPAREN SEMCOL .)
    STRING          reduce using rule 7 (Random -> RANDOM LPAREN ID COMMA atomic_variable COMMA atomic_variable RPAREN SEMCOL .)
    $end            reduce using rule 7 (Random -> RANDOM LPAREN ID COMMA atomic_variable COMMA atomic_variable RPAREN SEMCOL .)


state 108

    (22) IncFor -> INC LPAREN ID COMMA atomic_variable RPAREN . SEMCOL

    SEMCOL          shift and go to state 117


state 109

    (23) DecFor -> DEC LPAREN ID COMMA atomic_variable RPAREN . SEMCOL

    SEMCOL          shift and go to state 118


state 110

    (18) BalloonFor -> BALLOON LPAREN ID COMMA ID RPAREN . SEMCOL

    SEMCOL          shift and go to state 119


state 111

    (19) BalloonFor -> BALLOON LPAREN ID COMMA NUMBER RPAREN . SEMCOL

    SEMCOL          shift and go to state 120


state 112

    (21) BalloonFor -> BALLOON LPAREN NUMBER COMMA NUMBER RPAREN . SEMCOL

    SEMCOL          shift and go to state 121


state 113

    (20) BalloonFor -> BALLOON LPAREN NUMBER COMMA ID RPAREN . SEMCOL

    SEMCOL          shift and go to state 122


state 114

    (17) ForRandom -> RANDOM LPAREN ID COMMA atomic_variable COMMA . atomic_variable RPAREN SEMCOL
    (8) atomic_variable -> . NUMBER
    (9) atomic_variable -> . ID

    NUMBER          shift and go to state 65
    ID              shift and go to state 63

    atomic_variable                shift and go to state 123

state 115

    (15) ForRandom -> RANDOM LPAREN ID COMMA atomic_variable RPAREN . SEMCOL

    SEMCOL          shift and go to state 124


state 116

    (16) ForRandom -> RANDOM LPAREN NUMBER COMMA atomic_variable RPAREN . SEMCOL

    SEMCOL          shift and go to state 125


state 117

    (22) IncFor -> INC LPAREN ID COMMA atomic_variable RPAREN SEMCOL .

    INC             reduce using rule 22 (IncFor -> INC LPAREN ID COMMA atomic_variable RPAREN SEMCOL .)
    DEC             reduce using rule 22 (IncFor -> INC LPAREN ID COMMA atomic_variable RPAREN SEMCOL .)
    BALLOON         reduce using rule 22 (IncFor -> INC LPAREN ID COMMA atomic_variable RPAREN SEMCOL .)
    RANDOM          reduce using rule 22 (IncFor -> INC LPAREN ID COMMA atomic_variable RPAREN SEMCOL .)
    ENDDO           reduce using rule 22 (IncFor -> INC LPAREN ID COMMA atomic_variable RPAREN SEMCOL .)
    FOREND          reduce using rule 22 (IncFor -> INC LPAREN ID COMMA atomic_variable RPAREN SEMCOL .)


state 118

    (23) DecFor -> DEC LPAREN ID COMMA atomic_variable RPAREN SEMCOL .

    INC             reduce using rule 23 (DecFor -> DEC LPAREN ID COMMA atomic_variable RPAREN SEMCOL .)
    DEC             reduce using rule 23 (DecFor -> DEC LPAREN ID COMMA atomic_variable RPAREN SEMCOL .)
    BALLOON         reduce using rule 23 (DecFor -> DEC LPAREN ID COMMA atomic_variable RPAREN SEMCOL .)
    RANDOM          reduce using rule 23 (DecFor -> DEC LPAREN ID COMMA atomic_variable RPAREN SEMCOL .)
    ENDDO           reduce using rule 23 (DecFor -> DEC LPAREN ID COMMA atomic_variable RPAREN SEMCOL .)
    FOREND          reduce using rule 23 (DecFor -> DEC LPAREN ID COMMA atomic_variable RPAREN SEMCOL .)


state 119

    (18) BalloonFor -> BALLOON LPAREN ID COMMA ID RPAREN SEMCOL .

    INC             reduce using rule 18 (BalloonFor -> BALLOON LPAREN ID COMMA ID RPAREN SEMCOL .)
    DEC             reduce using rule 18 (BalloonFor -> BALLOON LPAREN ID COMMA ID RPAREN SEMCOL .)
    BALLOON         reduce using rule 18 (BalloonFor -> BALLOON LPAREN ID COMMA ID RPAREN SEMCOL .)
    RANDOM          reduce using rule 18 (BalloonFor -> BALLOON LPAREN ID COMMA ID RPAREN SEMCOL .)
    ENDDO           reduce using rule 18 (BalloonFor -> BALLOON LPAREN ID COMMA ID RPAREN SEMCOL .)
    FOREND          reduce using rule 18 (BalloonFor -> BALLOON LPAREN ID COMMA ID RPAREN SEMCOL .)


state 120

    (19) BalloonFor -> BALLOON LPAREN ID COMMA NUMBER RPAREN SEMCOL .

    INC             reduce using rule 19 (BalloonFor -> BALLOON LPAREN ID COMMA NUMBER RPAREN SEMCOL .)
    DEC             reduce using rule 19 (BalloonFor -> BALLOON LPAREN ID COMMA NUMBER RPAREN SEMCOL .)
    BALLOON         reduce using rule 19 (BalloonFor -> BALLOON LPAREN ID COMMA NUMBER RPAREN SEMCOL .)
    RANDOM          reduce using rule 19 (BalloonFor -> BALLOON LPAREN ID COMMA NUMBER RPAREN SEMCOL .)
    ENDDO           reduce using rule 19 (BalloonFor -> BALLOON LPAREN ID COMMA NUMBER RPAREN SEMCOL .)
    FOREND          reduce using rule 19 (BalloonFor -> BALLOON LPAREN ID COMMA NUMBER RPAREN SEMCOL .)


state 121

    (21) BalloonFor -> BALLOON LPAREN NUMBER COMMA NUMBER RPAREN SEMCOL .

    INC             reduce using rule 21 (BalloonFor -> BALLOON LPAREN NUMBER COMMA NUMBER RPAREN SEMCOL .)
    DEC             reduce using rule 21 (BalloonFor -> BALLOON LPAREN NUMBER COMMA NUMBER RPAREN SEMCOL .)
    BALLOON         reduce using rule 21 (BalloonFor -> BALLOON LPAREN NUMBER COMMA NUMBER RPAREN SEMCOL .)
    RANDOM          reduce using rule 21 (BalloonFor -> BALLOON LPAREN NUMBER COMMA NUMBER RPAREN SEMCOL .)
    ENDDO           reduce using rule 21 (BalloonFor -> BALLOON LPAREN NUMBER COMMA NUMBER RPAREN SEMCOL .)
    FOREND          reduce using rule 21 (BalloonFor -> BALLOON LPAREN NUMBER COMMA NUMBER RPAREN SEMCOL .)


state 122

    (20) BalloonFor -> BALLOON LPAREN NUMBER COMMA ID RPAREN SEMCOL .

    INC             reduce using rule 20 (BalloonFor -> BALLOON LPAREN NUMBER COMMA ID RPAREN SEMCOL .)
    DEC             reduce using rule 20 (BalloonFor -> BALLOON LPAREN NUMBER COMMA ID RPAREN SEMCOL .)
    BALLOON         reduce using rule 20 (BalloonFor -> BALLOON LPAREN NUMBER COMMA ID RPAREN SEMCOL .)
    RANDOM          reduce using rule 20 (BalloonFor -> BALLOON LPAREN NUMBER COMMA ID RPAREN SEMCOL .)
    ENDDO           reduce using rule 20 (BalloonFor -> BALLOON LPAREN NUMBER COMMA ID RPAREN SEMCOL .)
    FOREND          reduce using rule 20 (BalloonFor -> BALLOON LPAREN NUMBER COMMA ID RPAREN SEMCOL .)


state 123

    (17) ForRandom -> RANDOM LPAREN ID COMMA atomic_variable COMMA atomic_variable . RPAREN SEMCOL

    RPAREN          shift and go to state 126


state 124

    (15) ForRandom -> RANDOM LPAREN ID COMMA atomic_variable RPAREN SEMCOL .

    INC             reduce using rule 15 (ForRandom -> RANDOM LPAREN ID COMMA atomic_variable RPAREN SEMCOL .)
    DEC             reduce using rule 15 (ForRandom -> RANDOM LPAREN ID COMMA atomic_variable RPAREN SEMCOL .)
    BALLOON         reduce using rule 15 (ForRandom -> RANDOM LPAREN ID COMMA atomic_variable RPAREN SEMCOL .)
    RANDOM          reduce using rule 15 (ForRandom -> RANDOM LPAREN ID COMMA atomic_variable RPAREN SEMCOL .)
    ENDDO           reduce using rule 15 (ForRandom -> RANDOM LPAREN ID COMMA atomic_variable RPAREN SEMCOL .)
    FOREND          reduce using rule 15 (ForRandom -> RANDOM LPAREN ID COMMA atomic_variable RPAREN SEMCOL .)


state 125

    (16) ForRandom -> RANDOM LPAREN NUMBER COMMA atomic_variable RPAREN SEMCOL .

    INC             reduce using rule 16 (ForRandom -> RANDOM LPAREN NUMBER COMMA atomic_variable RPAREN SEMCOL .)
    DEC             reduce using rule 16 (ForRandom -> RANDOM LPAREN NUMBER COMMA atomic_variable RPAREN SEMCOL .)
    BALLOON         reduce using rule 16 (ForRandom -> RANDOM LPAREN NUMBER COMMA atomic_variable RPAREN SEMCOL .)
    RANDOM          reduce using rule 16 (ForRandom -> RANDOM LPAREN NUMBER COMMA atomic_variable RPAREN SEMCOL .)
    ENDDO           reduce using rule 16 (ForRandom -> RANDOM LPAREN NUMBER COMMA atomic_variable RPAREN SEMCOL .)
    FOREND          reduce using rule 16 (ForRandom -> RANDOM LPAREN NUMBER COMMA atomic_variable RPAREN SEMCOL .)


state 126

    (17) ForRandom -> RANDOM LPAREN ID COMMA atomic_variable COMMA atomic_variable RPAREN . SEMCOL

    SEMCOL          shift and go to state 127


state 127

    (17) ForRandom -> RANDOM LPAREN ID COMMA atomic_variable COMMA atomic_variable RPAREN SEMCOL .

    INC             reduce using rule 17 (ForRandom -> RANDOM LPAREN ID COMMA atomic_variable COMMA atomic_variable RPAREN SEMCOL .)
    DEC             reduce using rule 17 (ForRandom -> RANDOM LPAREN ID COMMA atomic_variable COMMA atomic_variable RPAREN SEMCOL .)
    BALLOON         reduce using rule 17 (ForRandom -> RANDOM LPAREN ID COMMA atomic_variable COMMA atomic_variable RPAREN SEMCOL .)
    RANDOM          reduce using rule 17 (ForRandom -> RANDOM LPAREN ID COMMA atomic_variable COMMA atomic_variable RPAREN SEMCOL .)
    ENDDO           reduce using rule 17 (ForRandom -> RANDOM LPAREN ID COMMA atomic_variable COMMA atomic_variable RPAREN SEMCOL .)
    FOREND          reduce using rule 17 (ForRandom -> RANDOM LPAREN ID COMMA atomic_variable COMMA atomic_variable RPAREN SEMCOL .)

